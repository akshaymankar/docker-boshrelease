groups:
- name: docker-boshrelease
  jobs:
  - test-docker-boshrelease
  - test-docker-boshrelease-pr
  - release-candidate
  - ship-it
  - bump-major
  - bump-minor

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

resources:
- name: git-docker-boshrelease
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/docker-boshrelease
    branch: tmp/kubo-ci
    private_key: ((git-ssh-key))

- name: git-pull-requests
  type: pull-request
  source:
    repo: cloudfoundry-incubator/docker-boshrelease
    base: master
    private_key: ((git-ssh-key))
    access_token: ((github-token-key))

- name: version
  type: semver
  source:
    driver: gcs
    bucket: kubo-pipeline-store
    key: docker-boshrelease-version
    json_key: ((gcs-json-key))
    initial_version: 31.0.1

- name: slack-notification
  type: slack-notification
  source:
    url: ((build-alert-slack-url))

- name: github-release
  type: github-release
  source:
    user: cloudfoundry-incubator
    repository: docker-boshrelease
    access_token: ((github-kubo-gitbot-access-token))

- name: s3-tarball
  type: s3
  source:
    bucket: docker-boshrelease
    region_name: us-east-1
    access_key_id: ((docker-boshrelease-aws-access-key-id))
    secret_access_key: ((docker-boshrelease-aws-access-key-id))
    regexp: docker-(.*).tgz

jobs:
- name: test-docker-boshrelease
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: git-docker-boshrelease
        trigger: true
    - aggregate:
      - task: test-docker-boshrelease
        file: git-docker-boshrelease/ci/tasks/test-docker-boshrelease.yml
        params: &test_docker_boshrelease_params
          PROXY_PRIVATE_KEY: ((docker-bosh.proxy-private-key))
          PROXY_USERNAME: ((docker-bosh.proxy-username))
          PROXY_IP: ((docker-bosh.proxy-ip))
          BOSH_CA_CERT: ((docker-bosh.ca-cert))
          BOSH_CLIENT: ((docker-bosh.client))
          BOSH_CLIENT_SECRET: ((docker-bosh.client-secret))
          BOSH_DEPLOYMENT: docker-testflight
          BOSH_ENVIRONMENT: ((docker-bosh.environment))
          MANIFEST_PATH: git-docker-boshrelease/manifests/containers/example.yml
      - task: test-docker-boshrelease-swarm
        file: git-docker-boshrelease/ci/tasks/test-docker-boshrelease.yml
        params:
          <<: *test_docker_boshrelease_params
          BOSH_DEPLOYMENT: docker-swarm-testflight
          MANIFEST_PATH: git-docker-boshrelease/manifests/swarm/docker-swarm.yml
    on_failure:
      put: slack-notification
      params:
        channel: '#docker-boshrelease'
        text: '<https://ci.kubo.sh/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|
          Concourse Failure! :sad_panda:> docker-boshrelease: test-docker-boshrelease job failed'

- name: test-docker-boshrelease-pr
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: git-pull-requests
        version: every
        trigger: true
    - put: git-pull-requests
      params:
        path: git-pull-requests
        status: pending
    - aggregate:
      - task: test-docker-boshrelease
        file: git-docker-boshrelease/ci/tasks/test-docker-boshrelease.yml
        input_mapping:
          git-docker-boshrelease: git-pull-requests
        params:
          <<: *test_docker_boshrelease_params
          BOSH_DEPLOYMENT: docker-testflight-pr
          REPO_ROOT: git-pull-requests
        on_failure:
          put: git-pull-requests
          params:
            path: git-pull-requests
            status: failure
        on_success:
          put: git-pull-requests
          params:
            path: git-pull-requests
            status: success
      - task: test-docker-boshrelease-swarm
        file: git-docker-boshrelease/ci/tasks/test-docker-boshrelease.yml
        params:
          <<: *test_docker_boshrelease_params
          BOSH_DEPLOYMENT: docker-swarm-testflight-pr
          MANIFEST_PATH: git-docker-boshrelease/manifests/swarm/docker-swarm.yml
    - task: pr-success-message
      file: git-docker-boshrelease/ci/tasks/configure-pr-status.yml
    on_success:
      put: slack-notification
      params:
        channel: '#docker-boshrelease'
        text_file: message/body

- name: release-candidate
  public: true
  plan:
  - do:
    - aggregate:
      - get: git-docker-boshrelease
        passed: [ test-docker-boshrelease ]
        trigger: true
      - get: version
        params:
          pre: rc
        trigger: true
    - put: version
      params:
        file: version/number
    on_failure:
      put: slack-notification
      params:
        channel: '#docker-boshrelease'
        text: '<https://ci.kubo.sh/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|
          Concourse Failure! :sad_panda:> docker-boshrelease: rc job failed'

- name: bump-minor
  public: true
  plan:
  - do:
    - get: version
      params:
        bump: minor
      trigger: false
    - put: version
      params:
        file: version/number
    on_failure:
      put: slack-notification
      params:
        channel: '#docker-boshrelease'
        text: '<https://ci.kubo.sh/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|
          Concourse Failure! :sad_panda:> docker-boshrelease: bump-minor job failed'

- name: bump-major
  public: true
  plan:
  - do:
    - get: version
      params:
        bump: major
      trigger: false
    - put: version
      params:
        file: version/number
    on_failure:
      put: slack-notification
      params:
        channel: '#docker-boshrelease'
        text: '<https://ci.kubo.sh/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|
          Concourse Failure! :sad_panda:> docker-boshrelease: bump-major job failed'

- name: ship-it
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: version
        params:
          bump: final
        passed: [ release-candidate ]
      - get: git-docker-boshrelease
        passed: [ release-candidate ]
      name: inputs
    - task: release
      file: git-docker-boshrelease/ci/tasks/ship-it.yml
      params:
        AWS_ACCESS_KEY: ((docker-boshrelease-aws-access-key-id))
        AWS_SECRET_KEY: ((docker-boshrelease-aws-access-key-secret))
        GIT_EMAIL: cfcr@pivotal.io
        GIT_NAME: CFCR Bot
        NOTIFICATION_OUT: notifications
        RELEASE_ROOT: github-release
        REPO_OUT: git-docker-boshrelease-output
        REPO_ROOT: git-docker-boshrelease
        VERSION_FROM: version/number
    - put: git-docker-boshrelease
      params:
        rebase: true
        repository: git-docker-boshrelease-output
    - put: s3-tarball
      params:
        file: github-release/artifacts/docker-*.tgz
    - put: github-release
      params:
        body: github-release/body
        globs:
        - github-release/artifacts/*
        name: github-release/name
        tag: github-release/tag
    - put: version
      params:
        bump: patch
    - aggregate:
      - put: slack-notification
        params:
          channel: '#docker-boshrelease'
          text_file: notifications/message
    on_failure:
      put: slack-notification
      params:
        channel: '#docker-boshrelease'
        text: '<https://ci.kubo.sh/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|
          Concourse Failure! :sad_panda:> docker-boshrelease: shipit job failed'
